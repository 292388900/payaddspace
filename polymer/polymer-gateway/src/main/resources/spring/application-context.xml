<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx classpath:/org/springframework/transaction/config/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop classpath:/org/springframework/aop/config/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.0.xsd
						http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.0.xsd ">
	<!-- 定义扩展点动态注入的处理类 -->
	<bean class="com.payadd.framework.common.spring.ExtensionBeanPostProcessor"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/polymer?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false" />
		<!--MySQL数据库的用户名 -->
		<property name="user" value="root" />
		<!--MySQL数据库 密码 -->
		<property name="password" value="" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="30" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<property name="maxStatements" value="0" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="com.payadd.framework.ddl.mybatis.MySqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="platformConfigLocation" value="classpath:mybatis/platform-config.xml"/>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="facade" class="com.payadd.framework.ddl.mybatis.MybatisDatabaseFacade">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<context:component-scan base-package="com.payadd">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource"/>  
	</bean>  
	  
	<!-- 定义事务通知 -->  
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <!-- 定义方法的过滤规则 -->  
	    <tx:attributes>  
	        <!-- 所有方法都使用事务 -->  
	        <tx:method name="*" propagation="REQUIRED"/>  
	        <!-- 定义所有get开头的方法都是只读的 -->  
	        <tx:method name="get*" read-only="true"/>  
	    </tx:attributes>  
	</tx:advice>  

	<!-- 定义AOP配置 -->
	<aop:config>
	    <!-- 定义一个切入点 -->
	    <aop:pointcut expression="execution (* com.payadd.polymer.gateway.auth.service.*.*(..))" id="services"/>
	    <!-- 对切入点和事务的通知，进行适配 -->
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
	</aop:config>
</beans>
